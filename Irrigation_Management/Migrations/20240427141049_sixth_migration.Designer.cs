// <auto-generated />
using System;
using Irrigation_Management.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Irrigation_Management.Migrations
{
    [DbContext(typeof(ManagementDBContext))]
    [Migration("20240427141049_sixth_migration")]
    partial class sixth_migration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Irrigation_Management.Models.Achievements", b =>
                {
                    b.Property<int>("Achievement_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Achievement_Id"));

                    b.Property<string>("Achievement_Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Achievement_Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Achievement_Status")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Achievement_Id");

                    b.ToTable("Achievements");
                });

            modelBuilder.Entity("Irrigation_Management.Models.Allocation_Systems", b =>
                {
                    b.Property<int?>("Game_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Game_Id1")
                        .HasColumnType("int");

                    b.Property<int>("System_Id")
                        .HasColumnType("int");

                    b.Property<int?>("System_Id1")
                        .HasColumnType("int");

                    b.Property<int>("User_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Users_Id")
                        .HasColumnType("int");

                    b.HasIndex("Game_Id1");

                    b.HasIndex("System_Id1");

                    b.HasIndex("Users_Id");

                    b.ToTable("Allocation_Systems");
                });

            modelBuilder.Entity("Irrigation_Management.Models.Crop_Status", b =>
                {
                    b.Property<int>("Crop_Status_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Crop_Status_Id"));

                    b.Property<string>("Crop_Status_Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Production_Percentage")
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("Crop_Status_Id");

                    b.ToTable("Crop_Status");
                });

            modelBuilder.Entity("Irrigation_Management.Models.Devices", b =>
                {
                    b.Property<int>("Device_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Device_Id"));

                    b.Property<int?>("Area_Id")
                        .HasColumnType("int");

                    b.Property<int>("Device_Enabled")
                        .HasColumnType("int");

                    b.Property<string>("Device_Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Device_Price")
                        .HasColumnType("decimal(10,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("Planting_AreaArea_Id")
                        .HasColumnType("int");

                    b.Property<int>("System_Id")
                        .HasColumnType("int");

                    b.Property<int?>("System_Id1")
                        .HasColumnType("int");

                    b.HasKey("Device_Id");

                    b.HasIndex("Planting_AreaArea_Id");

                    b.HasIndex("System_Id1");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("Irrigation_Management.Models.Games", b =>
                {
                    b.Property<int>("Game_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Game_Id"));

                    b.Property<int>("Achievement_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Achievement_Id1")
                        .HasColumnType("int");

                    b.Property<decimal?>("End_Score")
                        .HasColumnType("decimal(5,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Score_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Score_Id1")
                        .HasColumnType("int");

                    b.Property<int?>("Stage")
                        .HasColumnType("int");

                    b.HasKey("Game_Id");

                    b.HasIndex("Achievement_Id1");

                    b.HasIndex("Score_Id1");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("Irrigation_Management.Models.Irrigation_Actuators", b =>
                {
                    b.Property<int>("Irrigation_Actuator_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Irrigation_Actuator_Id"));

                    b.Property<int>("Device_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Device_Id1")
                        .HasColumnType("int");

                    b.Property<int>("Irrigation_Actuators_Type_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Irrigation_Actuators_Type_Id1")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Irrigation_Actuator_Id");

                    b.HasIndex("Device_Id1");

                    b.HasIndex("Irrigation_Actuators_Type_Id1");

                    b.ToTable("Irrigation_Actuators");
                });

            modelBuilder.Entity("Irrigation_Management.Models.Irrigation_Actuators_Types", b =>
                {
                    b.Property<int>("Irrigation_Actuators_Type_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Irrigation_Actuators_Type_Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Type_Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Irrigation_Actuators_Type_Id");

                    b.ToTable("Irrigation_Actuators_Types");
                });

            modelBuilder.Entity("Irrigation_Management.Models.Irrigation_Programs", b =>
                {
                    b.Property<int>("Irrigation_Program_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Irrigation_Program_Id"));

                    b.Property<int>("Area_Id")
                        .HasColumnType("int");

                    b.Property<TimeOnly>("End_Hour")
                        .HasColumnType("time");

                    b.Property<int>("Irrigations_Per_Week")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("Planting_AreaArea_Id")
                        .HasColumnType("int");

                    b.Property<TimeOnly>("Start_Hour")
                        .HasColumnType("time");

                    b.HasKey("Irrigation_Program_Id");

                    b.HasIndex("Planting_AreaArea_Id");

                    b.ToTable("Irrigation_Programs");
                });

            modelBuilder.Entity("Irrigation_Management.Models.Planting_Areas", b =>
                {
                    b.Property<int>("Area_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Area_Id"));

                    b.Property<int>("Crop_Status_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Crop_Status_Id1")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Plant_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Plant_Id1")
                        .HasColumnType("int");

                    b.HasKey("Area_Id");

                    b.HasIndex("Crop_Status_Id1");

                    b.HasIndex("Plant_Id1");

                    b.ToTable("Planting_Areas");
                });

            modelBuilder.Entity("Irrigation_Management.Models.Plants", b =>
                {
                    b.Property<int>("Plant_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Plant_Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<float>("Max_PH")
                        .HasColumnType("real");

                    b.Property<float>("Min_PH")
                        .HasColumnType("real");

                    b.Property<string>("Plant_Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Planting_Date")
                        .HasColumnType("datetime2");

                    b.Property<float>("Requirement_Liters")
                        .HasColumnType("real");

                    b.Property<string>("Specie")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Plant_Id");

                    b.ToTable("Plants");
                });

            modelBuilder.Entity("Irrigation_Management.Models.Score", b =>
                {
                    b.Property<int>("Score_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Score_Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Success_Rate")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal?>("Total")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal?>("Water_Saved")
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("Score_Id");

                    b.ToTable("Scores");
                });

            modelBuilder.Entity("Irrigation_Management.Models.Sensor_Data", b =>
                {
                    b.Property<int>("Sensors_Data_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Sensors_Data_Id"));

                    b.Property<float>("Data")
                        .HasColumnType("real");

                    b.Property<DateTime>("Date_Time")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Sensor_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Sensor_Id1")
                        .HasColumnType("int");

                    b.HasKey("Sensors_Data_Id");

                    b.HasIndex("Sensor_Id1");

                    b.ToTable("Sensor_Data");
                });

            modelBuilder.Entity("Irrigation_Management.Models.Sensor_Types", b =>
                {
                    b.Property<int>("Sensor_Type_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Sensor_Type_Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Measure_Unit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Sensor_Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Sensor_Type_Id");

                    b.ToTable("Sensor_Types");
                });

            modelBuilder.Entity("Irrigation_Management.Models.Sensors", b =>
                {
                    b.Property<int>("Sensor_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Sensor_Id"));

                    b.Property<int>("Device_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Device_Id1")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Sensor_Type_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Sensor_Type_Id1")
                        .HasColumnType("int");

                    b.HasKey("Sensor_Id");

                    b.HasIndex("Device_Id1");

                    b.HasIndex("Sensor_Type_Id1");

                    b.ToTable("Sensors");
                });

            modelBuilder.Entity("Irrigation_Management.Models.Systems", b =>
                {
                    b.Property<int>("System_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("System_Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Systems_Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("System_Id");

                    b.ToTable("Systems");
                });

            modelBuilder.Entity("Irrigation_Management.Models.User_Types", b =>
                {
                    b.Property<int>("User_Type_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("User_Type_Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("User_Type_Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("User_Type_Id");

                    b.ToTable("User_Types");
                });

            modelBuilder.Entity("Irrigation_Management.Models.Users", b =>
                {
                    b.Property<int>("Users_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Users_Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Is_Active")
                        .HasColumnType("int");

                    b.Property<string>("Names")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("Registration_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Surnames")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("User_Type_Id")
                        .HasColumnType("int");

                    b.Property<int?>("User_Type_Id1")
                        .HasColumnType("int");

                    b.HasKey("Users_Id");

                    b.HasIndex("User_Type_Id1");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Irrigation_Management.Models.Water_Management", b =>
                {
                    b.Property<int>("Water_Management_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Water_Management_Id"));

                    b.Property<float>("Capacity")
                        .HasColumnType("real");

                    b.Property<float?>("Collection_Hour")
                        .HasColumnType("real");

                    b.Property<int>("Device_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Device_Id1")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Water_Management_Type_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Water_Management_Type_Id1")
                        .HasColumnType("int");

                    b.HasKey("Water_Management_Id");

                    b.HasIndex("Device_Id1");

                    b.HasIndex("Water_Management_Type_Id1");

                    b.ToTable("Water_Managements");
                });

            modelBuilder.Entity("Irrigation_Management.Models.Water_Management_Types", b =>
                {
                    b.Property<int>("Water_Management_Type_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Water_Management_Type_Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Material")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Type_Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Water_Management_Type_Id");

                    b.ToTable("Water_Management_Types");
                });

            modelBuilder.Entity("Irrigation_Management.Models.Allocation_Systems", b =>
                {
                    b.HasOne("Irrigation_Management.Models.Games", "Game")
                        .WithMany()
                        .HasForeignKey("Game_Id1");

                    b.HasOne("Irrigation_Management.Models.Systems", "System")
                        .WithMany()
                        .HasForeignKey("System_Id1");

                    b.HasOne("Irrigation_Management.Models.Users", "User")
                        .WithMany()
                        .HasForeignKey("Users_Id");

                    b.Navigation("Game");

                    b.Navigation("System");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Irrigation_Management.Models.Devices", b =>
                {
                    b.HasOne("Irrigation_Management.Models.Planting_Areas", "Planting_Area")
                        .WithMany()
                        .HasForeignKey("Planting_AreaArea_Id");

                    b.HasOne("Irrigation_Management.Models.Systems", "System")
                        .WithMany()
                        .HasForeignKey("System_Id1");

                    b.Navigation("Planting_Area");

                    b.Navigation("System");
                });

            modelBuilder.Entity("Irrigation_Management.Models.Games", b =>
                {
                    b.HasOne("Irrigation_Management.Models.Achievements", "Achievement")
                        .WithMany()
                        .HasForeignKey("Achievement_Id1");

                    b.HasOne("Irrigation_Management.Models.Score", "Scor")
                        .WithMany()
                        .HasForeignKey("Score_Id1");

                    b.Navigation("Achievement");

                    b.Navigation("Scor");
                });

            modelBuilder.Entity("Irrigation_Management.Models.Irrigation_Actuators", b =>
                {
                    b.HasOne("Irrigation_Management.Models.Devices", "Device")
                        .WithMany()
                        .HasForeignKey("Device_Id1");

                    b.HasOne("Irrigation_Management.Models.Irrigation_Actuators_Types", "Irrigation_Actuators_Type")
                        .WithMany()
                        .HasForeignKey("Irrigation_Actuators_Type_Id1");

                    b.Navigation("Device");

                    b.Navigation("Irrigation_Actuators_Type");
                });

            modelBuilder.Entity("Irrigation_Management.Models.Irrigation_Programs", b =>
                {
                    b.HasOne("Irrigation_Management.Models.Planting_Areas", "Planting_Area")
                        .WithMany()
                        .HasForeignKey("Planting_AreaArea_Id");

                    b.Navigation("Planting_Area");
                });

            modelBuilder.Entity("Irrigation_Management.Models.Planting_Areas", b =>
                {
                    b.HasOne("Irrigation_Management.Models.Crop_Status", "Crop_Statu")
                        .WithMany()
                        .HasForeignKey("Crop_Status_Id1");

                    b.HasOne("Irrigation_Management.Models.Plants", "Plant")
                        .WithMany()
                        .HasForeignKey("Plant_Id1");

                    b.Navigation("Crop_Statu");

                    b.Navigation("Plant");
                });

            modelBuilder.Entity("Irrigation_Management.Models.Sensor_Data", b =>
                {
                    b.HasOne("Irrigation_Management.Models.Sensors", "Sensor")
                        .WithMany()
                        .HasForeignKey("Sensor_Id1");

                    b.Navigation("Sensor");
                });

            modelBuilder.Entity("Irrigation_Management.Models.Sensors", b =>
                {
                    b.HasOne("Irrigation_Management.Models.Devices", "Device")
                        .WithMany()
                        .HasForeignKey("Device_Id1");

                    b.HasOne("Irrigation_Management.Models.Sensor_Types", "Sensor_Type")
                        .WithMany()
                        .HasForeignKey("Sensor_Type_Id1");

                    b.Navigation("Device");

                    b.Navigation("Sensor_Type");
                });

            modelBuilder.Entity("Irrigation_Management.Models.Users", b =>
                {
                    b.HasOne("Irrigation_Management.Models.User_Types", "User_Type")
                        .WithMany()
                        .HasForeignKey("User_Type_Id1");

                    b.Navigation("User_Type");
                });

            modelBuilder.Entity("Irrigation_Management.Models.Water_Management", b =>
                {
                    b.HasOne("Irrigation_Management.Models.Devices", "Device")
                        .WithMany()
                        .HasForeignKey("Device_Id1");

                    b.HasOne("Irrigation_Management.Models.Water_Management_Types", "Water_Management_Type")
                        .WithMany()
                        .HasForeignKey("Water_Management_Type_Id1");

                    b.Navigation("Device");

                    b.Navigation("Water_Management_Type");
                });
#pragma warning restore 612, 618
        }
    }
}
